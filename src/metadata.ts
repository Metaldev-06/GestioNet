/* eslint-disable */
export default async () => {
    const t = {
        ["./common/enums/system-role.enum"]: await import("./common/enums/system-role.enum"),
        ["./features/account/entities/account.entity"]: await import("./features/account/entities/account.entity"),
        ["./common/enums/transaction-type.enum,"]: await import("./common/enums/transaction-type.enum,"),
        ["./features/customers/entities/customer.entity"]: await import("./features/customers/entities/customer.entity"),
        ["./features/transactions/entities/transaction.entity"]: await import("./features/transactions/entities/transaction.entity"),
        ["./features/user/entities/user.entity"]: await import("./features/user/entities/user.entity")
    };
    return { "@nestjs/swagger": { "models": [[import("./features/user/dto/create-user.dto"), { "CreateUserDto": { firstName: { required: true, type: () => String, maxLength: 50 }, lastName: { required: true, type: () => String, maxLength: 50 }, email: { required: true, type: () => String, format: "email" }, password: { required: true, type: () => String, minLength: 6, maxLength: 250, pattern: "/(?:(?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/" } } }], [import("./features/user/dto/update-user.dto"), { "UpdateUserDto": { firstName: { required: false, type: () => String, maxLength: 50 }, lastName: { required: false, type: () => String, maxLength: 50 } } }], [import("./features/user/entities/user.entity"), { "User": { id: { required: true, type: () => String }, firstName: { required: true, type: () => String }, lastName: { required: true, type: () => String }, email: { required: true, type: () => String }, password: { required: true, type: () => String }, role: { required: true, enum: t["./common/enums/system-role.enum"].Role }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, deletedAt: { required: true, type: () => Date } } }], [import("./features/auth/dto/login-auth.dto"), { "LoginAuthDto": { email: { required: true, type: () => String, format: "email" }, password: { required: true, type: () => String, minLength: 6, maxLength: 250, pattern: "/(?:(?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/" } } }], [import("./features/auth/dto/register-auth.dto"), { "RegisterAuthDto": { firstName: { required: true, type: () => String, maxLength: 50 }, lastName: { required: true, type: () => String, maxLength: 50 }, email: { required: true, type: () => String, format: "email" }, password: { required: true, type: () => String, minLength: 6, maxLength: 250, pattern: "/(?:(?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/" } } }], [import("./features/customers/entities/customer.entity"), { "Customer": { id: { required: true, type: () => String }, name: { required: true, type: () => String }, dni: { required: true, type: () => String }, address: { required: true, type: () => String }, city: { required: true, type: () => String }, email: { required: true, type: () => String }, phone: { required: true, type: () => String }, account: { required: true, type: () => t["./features/account/entities/account.entity"].Account }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, deletedAt: { required: true, type: () => Date } } }], [import("./features/transactions/entities/transaction.entity"), { "Transaction": { id: { required: true, type: () => String }, accountId: { required: true, type: () => t["./features/account/entities/account.entity"].Account }, amount: { required: true, type: () => Number }, type: { required: true, enum: t["./common/enums/transaction-type.enum,"].TransactionType }, description: { required: true, type: () => String }, createdAt: { required: true, type: () => Date } } }], [import("./features/account/entities/account.entity"), { "Account": { id: { required: true, type: () => String }, customer: { required: true, type: () => t["./features/customers/entities/customer.entity"].Customer }, transactions: { required: true, type: () => [t["./features/transactions/entities/transaction.entity"].Transaction] }, balance: { required: true, type: () => Number }, debt: { required: true, type: () => Number }, debtLimit: { required: true, type: () => Number }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, deletedAt: { required: true, type: () => Date } } }], [import("./features/customers/dto/create-customer.dto"), { "CreateCustomerDto": { name: { required: true, type: () => String, maxLength: 255 }, dni: { required: false, type: () => String, maxLength: 255 }, address: { required: false, type: () => String, maxLength: 255 }, city: { required: false, type: () => String, maxLength: 255 }, email: { required: false, type: () => String, maxLength: 255 }, phone: { required: false, type: () => String, maxLength: 255 } } }], [import("./common/dtos/pagination.dto"), { "PaginationDto": { limit: { required: false, type: () => Number, default: 10, minimum: 0, maximum: 50, minimum: 1 }, offset: { required: false, type: () => Number, default: 0, minimum: 0 }, order: { required: false, type: () => Object }, sort: { required: false, type: () => String, default: "id" }, term: { required: false, type: () => String }, category: { required: true, type: () => String }, subCategory: { required: true, type: () => String }, brand: { required: true, type: () => String }, country: { required: true, type: () => String } } }], [import("./features/customers/dto/update-customer.dto"), { "UpdateCustomerDto": {} }], [import("./features/account/dto/balance.dto"), { "BalanceDto": { accountId: { required: true, type: () => String, format: "uuid" }, amount: { required: true, type: () => Number, minimum: 1 }, description: { required: false, type: () => String, maxLength: 255 } } }], [import("./features/account/dto/update-account.dto"), { "UpdateAccountDto": { debtLimit: { required: true, type: () => Number, minimum: 1 } } }], [import("./features/transactions/dto/create-transaction.dto"), { "CreateTransactionDto": {} }], [import("./features/transactions/dto/transactions-by-date.dto"), { "TransactionsByDateDto": { year: { required: true, type: () => Number, minimum: 1 }, month: { required: true, type: () => Number, minimum: 1 }, customerId: { required: false, type: () => String, format: "uuid" }, accountId: { required: false, type: () => String, format: "uuid" } } }], [import("./features/transactions/dto/update-transaction.dto"), { "UpdateTransactionDto": {} }]], "controllers": [[import("./features/user/user.controller"), { "UserController": { "findAll": { type: [t["./features/user/entities/user.entity"].User] }, "findOne": { type: t["./features/user/entities/user.entity"].User }, "update": { type: t["./features/user/entities/user.entity"].User }, "remove": {} } }], [import("./features/auth/auth.controller"), { "AuthController": { "register": {}, "login": {} } }], [import("./features/customers/customers.controller"), { "CustomersController": { "create": { type: t["./features/customers/entities/customer.entity"].Customer }, "findAll": {}, "findAllSanitized": {}, "getCustomerSummary": {}, "findOne": { type: t["./features/customers/entities/customer.entity"].Customer }, "update": { type: t["./features/customers/entities/customer.entity"].Customer }, "remove": {} } }], [import("./features/account/account.controller"), { "AccountController": { "addBalance": { type: t["./features/account/entities/account.entity"].Account }, "reduceBalance": { type: t["./features/account/entities/account.entity"].Account }, "settleDebt": { type: t["./features/account/entities/account.entity"].Account }, "updateDebtLimit": { type: t["./features/account/entities/account.entity"].Account } } }], [import("./features/transactions/transactions.controller"), { "TransactionsController": { "findAll": { type: [t["./features/transactions/entities/transaction.entity"].Transaction] }, "getTransactionYears": { type: [Number] }, "getTransactionsByDate": {}, "getTransactionsByMonth": {}, "findOne": { type: String } } }]] } };
};